{"ast":null,"code":"var _jsxFileName = \"A:\\\\bootcamp\\\\3-React\\\\nucampsite\\\\src\\\\components\\\\CampsiteInfoComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\nimport Directory from './DirectoryComponent';\n\nclass CampsiteInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      campsite: null\n    };\n  }\n\n  renderSelectedCampsite(campsite) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      src: campsite.image,\n      alt: campsite.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, campsite.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, campsite.description))));\n  }\n\n  renderComments(comments) {\n    if (comments) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-5 m-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"Comments\"), comments.map(comment => /*#__PURE__*/React.createElement(\"div\", {\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 46\n        }\n      }, comment.text, \"-- \", comment.author, \", \", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date))))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    const myCampsite = this.props.campsite;\n\n    if (myCampsite) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, this.renderSelectedCampsite(myCampsite), this.renderComments(this.props.campsite.comments));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n}\n\nexport default CampsiteInfo;","map":{"version":3,"sources":["A:/bootcamp/3-React/nucampsite/src/components/CampsiteInfoComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","Directory","CampsiteInfo","constructor","props","state","campsite","renderSelectedCampsite","image","name","description","renderComments","comments","map","comment","id","text","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","render","myCampsite"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,cAAxB,EAAwCC,QAAxC,EAAkDC,QAAlD,EAA4DC,SAA5D,QAA6E,YAA7E;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AACjCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,sBAAsB,CAACD,QAAD,EAAW;AAC7B,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,GAAG,MAAZ;AAAa,MAAA,GAAG,EAAEA,QAAQ,CAACE,KAA3B;AAAkC,MAAA,GAAG,EAAEF,QAAQ,CAACG,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYH,QAAQ,CAACG,IAArB,CADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWH,QAAQ,CAACI,WAApB,CAFJ,CAFJ,CADJ,CADJ;AAWH;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAW;AACrB,QAAIA,QAAJ,EAAc;AACV,0BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKA,QAAQ,CAACC,GAAT,CAAaC,OAAO,iBAAI;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACpBD,OAAO,CAACE,IADY,SAEjBF,OAAO,CAACG,MAFS,QAEC,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,OAA1B;AAAmCC,QAAAA,GAAG,EAAE;AAAxC,OAAjC,EAAqFC,MAArF,CAA4F,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWX,OAAO,CAACY,IAAnB,CAAT,CAA5F,CAFD,CAAxB,CAFL,CADJ;AAUH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,KAAKxB,KAAL,CAAWE,QAA9B;;AAEA,QAAIsB,UAAJ,EAAgB;AACZ,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKrB,sBAAL,CAA4BqB,UAA5B,CADL,EAEK,KAAKjB,cAAL,CAAoB,KAAKP,KAAL,CAAWE,QAAX,CAAoBM,QAAxC,CAFL,CADJ;AAMH,KAPD,MAQK;AACD,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;AACJ;;AA1DgC;;AA6DrC,eAAeV,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport Directory from './DirectoryComponent';\r\n\r\nclass CampsiteInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            campsite: null\r\n        };\r\n    }\r\n\r\n    renderSelectedCampsite(campsite) {\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg top src={campsite.image} alt={campsite.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{campsite.name}</CardTitle>\r\n                        <CardText>{campsite.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderComments(comments) {\r\n        if (comments) {\r\n            return (\r\n                <div className=\"col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    {comments.map(comment => <div key={comment.id}>\r\n                        {comment.text}\r\n                        -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const myCampsite = this.props.campsite;\r\n\r\n        if (myCampsite) {\r\n            return (\r\n                <div className=\"row\">\r\n                    {this.renderSelectedCampsite(myCampsite)}\r\n                    {this.renderComments(this.props.campsite.comments)}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default CampsiteInfo;"]},"metadata":{},"sourceType":"module"}